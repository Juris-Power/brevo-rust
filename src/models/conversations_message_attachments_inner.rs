/*
 * Brevo API
 *
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConversationsMessageAttachmentsInner {
    /// The name of the file.
    #[serde(rename = "fileName", skip_serializing_if = "Option::is_none")]
    pub file_name: Option<String>,
    /// `true` for inline files.
    #[serde(rename = "isInline", skip_serializing_if = "Option::is_none")]
    pub is_inline: Option<String>,
    /// The ID of the inline file.
    #[serde(rename = "inlineId", skip_serializing_if = "Option::is_none")]
    pub inline_id: Option<String>,
    /// The URL of the file.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// `true` for images.
    #[serde(rename = "isImage", skip_serializing_if = "Option::is_none")]
    pub is_image: Option<bool>,
    /// The size of the file in bytes.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
}

impl ConversationsMessageAttachmentsInner {
    pub fn new() -> ConversationsMessageAttachmentsInner {
        ConversationsMessageAttachmentsInner {
            file_name: None,
            is_inline: None,
            inline_id: None,
            url: None,
            is_image: None,
            size: None,
        }
    }
}
